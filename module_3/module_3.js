// const strings = ['My', 'name', 'is', 'John'];

// for (const string of strings) {
//     console.log(string)
// }

// break continue
// const numbers = [1, 2, 3, 4, 5, 6, 7];
// –í–∏–≤–µ—Å—Ç–∏ —á–∏—Å–ª–∞ –∑ –º–∞—Å–∏–≤—É, –æ–∫—Ä—ñ–º 2, 4 —ñ–Ω–¥–µ–∫—Å—É
// for (let i = 0; i < numbers.length; i++) {
//     if (i === 2 || i === 4) {
//         continue;
//     }
//
//     console.log(numbers[i]);
// }

// –í–∏–≤–µ—Å—Ç–∏ –µ–ª–µ–º–µ–Ω—Ç–∏ –º–∞—Å–∏–≤—É –¥–æ 5 —ñ–Ω–¥–µ–∫—Å—É
// const numbers = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10];
//
// for (let i = 0; i < numbers.length; i++) {
//     if (i === 5) {
//         break;
//     }
//
//     console.log(numbers[i]);
// }
//
// console.log('End')

// increments and decrements
// let counter = 10;
// console.log(counter++) // 10
// console.log(++counter) // 12
// console.log(counter++) // 12
// console.log(++counter) // 14

// –ü—Ä–∞–∫—Ç–∏–∫–∞
// –ú–æ–¥—É–ª—å 2. –ó–∞–Ω—è—Ç—Ç—è 3. –ú–∞—Å–∏–≤–∏

// Example 1 - –ë–∞–∑–æ–≤—ñ –æ–ø–µ—Ä–∞—Ü—ñ—ó –∑ –º–∞—Å–∏–≤–æ–º
// –°—Ç–≤–æ—Ä—ñ—Ç—å –º–∞—Å–∏–≤ genres –∑ –µ–ª–µ–º–µ–Ω—Ç–∞–º–∏ ¬´Jazz¬ª —Ç–∞ ¬´Blues¬ª.
// –î–æ–¥–∞–π—Ç–µ ¬´–†–æ–∫-–Ω-—Ä–æ–ª¬ª –¥–æ –∫—ñ–Ω—Ü—è.
// –í–∏–≤–µ–¥—ñ—Ç—å —É –∫–æ–Ω—Å–æ–ª—å –ø–µ—Ä—à–∏–π –µ–ª–µ–º–µ–Ω—Ç –º–∞—Å–∏–≤—É.
// –í–∏–≤–µ–¥—ñ—Ç—å —É –∫–æ–Ω—Å–æ–ª—å –æ—Å—Ç–∞–Ω–Ω—ñ–π –µ–ª–µ–º–µ–Ω—Ç –º–∞—Å–∏–≤—É. –ö–æ–¥ –ø–æ–≤–∏–Ω–µ–Ω –ø—Ä–∞—Ü—é–≤–∞—Ç–∏ –¥–ª—è –º–∞—Å–∏–≤—É –¥–æ–≤—ñ–ª—å–Ω–æ—ó –¥–æ–≤–∂–∏–Ω–∏.
// –í–∏–¥–∞–ª—ñ—Ç—å –ø–µ—Ä—à–∏–π –µ–ª–µ–º–µ–Ω—Ç —Ç–∞ –≤–∏–≤–µ–¥—ñ—Ç—å –π–æ–≥–æ –≤ –∫–æ–Ω—Å–æ–ª—å.
// –í—Å—Ç–∞–≤—Ç–µ ¬´Country¬ª —Ç–∞ ¬´Reggae¬ª –Ω–∞ –ø–æ—á–∞—Ç–æ–∫ –º–∞—Å–∏–≤—É.
// const genres = ['Jazz', 'Blues'];
//
// genres.push('Rock-N-Roll');
//
// console.log(genres[genres.length - 1])
//
// console.log(genres.shift())
//
// genres.unshift('Country', 'Reggae');
//
// console.log(genres)





// Example 2 - –ú–∞—Å–∏–≤–∏ —Ç–∞ —Ä—è–¥–∫–∏
// –ù–∞–ø–∏—à–∏ —Å–∫—Ä–∏–ø—Ç –¥–ª—è –æ–±—á–∏—Å–ª–µ–Ω–Ω—è –ø–ª–æ—â—ñ –ø—Ä—è–º–æ–∫—É—Ç–Ω–∏–∫–∞ –∑—ñ —Å—Ç–æ—Ä–æ–Ω–∞–º–∏, –∑–Ω–∞—á–µ–Ω–Ω—è —è–∫–∏—Ö –∑–±–µ—Ä—ñ–≥–∞—é—Ç—å—Å—è
//  —É –∑–º—ñ–Ω–Ω—ñ–π values —É –≤–∏–≥–ª—è–¥—ñ —Ä—è–¥–∫–∞. –ó–Ω–∞—á–µ–Ω–Ω—è –≥–∞—Ä–∞–Ω—Ç–æ–≤–∞–Ω–æ —Ä–æ–∑–¥—ñ–ª–µ–Ω—ñ –ø—Ä–æ–±—ñ–ª–æ–º.
//
// const values = '8 11';
//
// const splitResult = values.split(' ') // ['8', '11']
//
// const side1 = +splitResult[0]; // 8
// const side2 = +splitResult[1]; // 11
//
// const result = side1 * side2;
//
// console.log(result);





// Example 3 - –ü–µ—Ä–µ–±—ñ—Ä –º–∞—Å–∏–≤—É
// –ù–∞–ø–∏—à–∏ —Å–∫—Ä–∏–ø—Ç –¥–ª—è –ø–µ—Ä–µ–±–æ—Ä—É –º–∞—Å–∏–≤—É fruits —Ü–∏–∫–ª–æ–º for. –î–ª—è –∫–æ–∂–Ω–æ–≥–æ –µ–ª–µ–º–µ–Ω—Ç–∞ –º–∞—Å–∏–≤—É –≤–∏–≤–µ–¥–∏ –≤
//  –∫–æ–Ω—Å–æ–ª—å —Ä—è–¥–æ–∫ —É —Ñ–æ—Ä–º–∞—Ç—ñ –Ω–æ–º–µ—Ä_–µ–ª–µ–º–µ–Ω—Ç–∞: –∑–Ω–∞—á–µ–Ω–Ω—è_–µ–ª–µ–º–µ–Ω—Ç–∞. –ù—É–º–µ—Ä–∞—Ü—ñ—è –µ–ª–µ–º–µ–Ω—Ç—ñ–≤ –ø–æ–≤–∏–Ω–Ω–∞ –ø–æ—á–∏–Ω–∞—Ç–∏—Å—è –∑ 1.
//
// const fruits = ['üçé', 'üçá', 'üçë', 'üçå', 'üçã'];
//
// let counter = 0;
//
// for (const fruit of fruits) {
//     console.log(++counter, fruit);
// }





// Example 4 - –ú–∞—Å–∏–≤–∏ —Ç–∞ —Ü–∏–∫–ª–∏
// –ù–∞–ø–∏—à–∏ —Å–∫—Ä–∏–ø—Ç, —è–∫–∏–π –≤–∏–≤–æ–¥–∏—Ç—å —É –∫–æ–Ω—Å–æ–ª—å —ñ–º'—è —Ç–∞ —Ç–µ–ª–µ—Ñ–æ–Ω–Ω–∏–π –Ω–æ–º–µ—Ä –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞.
//  –£ –∑–º—ñ–Ω–Ω–∏—Ö names —Ç–∞ phones –∑–±–µ—Ä—ñ–≥–∞—é—Ç—å—Å—è —Ä—è–¥–∫–∏ —ñ–º–µ–Ω —Ç–∞ —Ç–µ–ª–µ—Ñ–æ–Ω–Ω–∏—Ö –Ω–æ–º–µ—Ä—ñ–≤, —Ä–æ–∑–¥—ñ–ª–µ–Ω—ñ –∫–æ–º–∞–º–∏.
//  –ü–æ—Ä—è–¥–∫–æ–≤–∏–π –Ω–æ–º–µ—Ä —ñ–º–µ–Ω —Ç–∞ —Ç–µ–ª–µ—Ñ–æ–Ω—ñ–≤ —É —Ä—è–¥–∫–∞—Ö –≤–∫–∞–∑—É—é—Ç—å –Ω–∞ –≤—ñ–¥–ø–æ–≤—ñ–¥–Ω—ñ—Å—Ç—å. –ö—ñ–ª—å–∫—ñ—Å—Ç—å —ñ–º–µ–Ω —Ç–∞ —Ç–µ–ª–µ—Ñ–æ–Ω—ñ–≤ –≥–∞—Ä–∞–Ω—Ç–æ–≤–∞–Ω–æ –æ–¥–Ω–∞–∫–æ–≤–∞.
//
// const names = 'Jacob,William,Solomon,Artemis';
// const phones = '89001234567,89001112233,890055566377,890055566300';
//
// const namesArray = names.split(',');
// const phonesArray = phones.split(',');
//
// for (let i = 0; i < namesArray.length; i++) {
//     console.log(namesArray[i], phonesArray[i]);
// }



// Example 5 - –ú–∞—Å–∏–≤–∏ —Ç–∞ —Ä—è–¥–∫–∏
// –ù–∞–ø–∏—à–∏ —Å–∫—Ä–∏–ø—Ç, —è–∫–∏–π –≤–∏–≤–æ–¥–∏—Ç—å —É –∫–æ–Ω—Å–æ–ª—å —É—Å—ñ —Å–ª–æ–≤–∞ —Ä—è–¥–∫–∞ –∫—Ä—ñ–º –ø–µ—Ä—à–æ–≥–æ —ñ –æ—Å—Ç–∞–Ω–Ω—å–æ–≥–æ.
//  –†–µ–∑—É–ª—å—Ç—É—é—á–∏–π —Ä—è–¥–æ–∫ –Ω–µ –ø–æ–≤–∏–Ω–µ–Ω –ø–æ—á–∏–Ω–∞—Ç–∏—Å—è –∞–±–æ –∑–∞–∫—ñ–Ω—á—É–≤–∞—Ç–∏—Å—è —Å–∏–º–≤–æ–ª –ø—Ä–æ–±—ñ–ª—É. –°–∫—Ä–∏–ø—Ç –ø–æ–≤–∏–Ω–µ–Ω –ø—Ä–∞—Ü—é–≤–∞—Ç–∏ –¥–ª—è –±—É–¥—å-—è–∫–æ–≥–æ —Ä—è–¥–∫–∞.
//
// const string = 'Welcome to the future';
// const words = string.split(' ')
//
// for (let i = 0; i < words.length; i++) {
//     if (i === 0 || i === words.length - 1) {
//         continue;
//     }
//
//     console.log(words[i]);
// }



// Example 6 - –ú–∞—Å–∏–≤–∏ —Ç–∞ —Ä—è–¥–∫–∏
// –ù–∞–ø–∏—à–∏ —Å–∫—Ä–∏–ø—Ç, —è–∫–∏–π ¬´—Ä–æ–∑–≥–æ—Ä—Ç–∞—î¬ª —Ä—è–¥–æ–∫ (–∑–≤–æ—Ä–æ—Ç–Ω–∏–π –ø–æ—Ä—è–¥–æ–∫ –±—É–∫–≤) —ñ –≤–∏–≤–æ–¥–∏—Ç—å –π–æ–≥–æ –≤ –∫–æ–Ω—Å–æ–ª—å.
//
// const string = 'Welcome to the future';
// const words = string.split('')
// const reversedArray = words.reverse();
// const result = reversedArray.join('')
// console.log(result)




// Example 7 - –°–æ—Ä—Ç—É–≤–∞–Ω–Ω—è –º–∞—Å–∏–≤—É —ñ–∑ —Ü–∏–∫–ª–æ–º
// –ù–∞–ø–∏—à–∏ —Å–∫—Ä–∏–ø—Ç —Å–æ—Ä—Ç—É–≤–∞–Ω–Ω—è –º–∞—Å–∏–≤—É —Ä—è–¥–∫—ñ–≤ –≤ –∞–ª—Ñ–∞–≤—ñ—Ç–Ω–æ–º—É –ø–æ—Ä—è–¥–∫—É –∑–∞ –ø–µ—Ä—à–æ—é –ª—ñ—Ç–µ—Ä–æ—é –µ–ª–µ–º–µ–Ω—Ç–∞.
//
// const langs = ['python', 'javascript', 'c++', 'haskel', 'php', 'ruby'];




// Example 8 - –ü–æ—à—É–∫ –µ–ª–µ–º–µ–Ω—Ç–∞
// –ù–∞–ø–∏—à–∏ —Å–∫—Ä–∏–ø—Ç –ø–æ—à—É–∫—É –Ω–∞–π–º–µ–Ω—à–æ–≥–æ —á–∏—Å–ª–∞ —É –º–∞—Å–∏–≤—ñ. –ö–æ–¥ –ø–æ–≤–∏–Ω–µ–Ω –ø—Ä–∞—Ü—é–≤–∞—Ç–∏ –¥–ª—è –±—É–¥—å-—è–∫–æ–≥–æ –º–∞—Å–∏–≤—É —á–∏—Å–µ–ª.
//  –í–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É–π —Ü–∏–∫–ª –¥–ª—è —Ä–æ–∑–≤'—è–∑–∞–Ω–Ω—è –∑–∞–¥–∞—á—ñ.
//
// const numbers = [2, 17, 94, 1, 23, 37];
// let min = numbers[0];

// for (const number of numbers) {
//     if (min > number) {
//         min = number;
//     }
// }

// console.log(min)

//                   ------ 2 2 2 2 2 2 2  2 2 2  2 2 2 2 2 2 -----



// const strings = ['My', 'name', 'is', 'John'];

// for (const string of strings) {
//     console.log(string)
// }

// break continue
// const numbers = [1, 2, 3, 4, 5, 6, 7];
// –í–∏–≤–µ—Å—Ç–∏ —á–∏—Å–ª–∞ –∑ –º–∞—Å–∏–≤—É, –æ–∫—Ä—ñ–º 2, 4 —ñ–Ω–¥–µ–∫—Å—É
// for (let i = 0; i < numbers.length; i++) {
//     if (i === 2 || i === 4) {
//         continue;
//     }
//
//     console.log(numbers[i]);
// }

// –í–∏–≤–µ—Å—Ç–∏ –µ–ª–µ–º–µ–Ω—Ç–∏ –º–∞—Å–∏–≤—É –¥–æ 5 —ñ–Ω–¥–µ–∫—Å—É
// const numbers = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10];
//
// for (let i = 0; i < numbers.length; i++) {
//     if (i === 5) {
//         break;
//     }
//
//     console.log(numbers[i]);
// }
//
// console.log('End')

// increments and decrements
// let counter = 10;
// console.log(counter++) // 10
// console.log(++counter) // 12
// console.log(counter++) // 12
// console.log(++counter) // 14

// –ü—Ä–∞–∫—Ç–∏–∫–∞
// –ú–æ–¥—É–ª—å 2. –ó–∞–Ω—è—Ç—Ç—è 3. –ú–∞—Å–∏–≤–∏

// Example 1 - –ë–∞–∑–æ–≤—ñ –æ–ø–µ—Ä–∞—Ü—ñ—ó –∑ –º–∞—Å–∏–≤–æ–º
// –°—Ç–≤–æ—Ä—ñ—Ç—å –º–∞—Å–∏–≤ genres –∑ –µ–ª–µ–º–µ–Ω—Ç–∞–º–∏ ¬´Jazz¬ª —Ç–∞ ¬´Blues¬ª.
// –î–æ–¥–∞–π—Ç–µ ¬´–†–æ–∫-–Ω-—Ä–æ–ª¬ª –¥–æ –∫—ñ–Ω—Ü—è.
// –í–∏–≤–µ–¥—ñ—Ç—å —É –∫–æ–Ω—Å–æ–ª—å –ø–µ—Ä—à–∏–π –µ–ª–µ–º–µ–Ω—Ç –º–∞—Å–∏–≤—É.
// –í–∏–≤–µ–¥—ñ—Ç—å —É –∫–æ–Ω—Å–æ–ª—å –æ—Å—Ç–∞–Ω–Ω—ñ–π –µ–ª–µ–º–µ–Ω—Ç –º–∞—Å–∏–≤—É. –ö–æ–¥ –ø–æ–≤–∏–Ω–µ–Ω –ø—Ä–∞—Ü—é–≤–∞—Ç–∏ –¥–ª—è –º–∞—Å–∏–≤—É –¥–æ–≤—ñ–ª—å–Ω–æ—ó –¥–æ–≤–∂–∏–Ω–∏.
// –í–∏–¥–∞–ª—ñ—Ç—å –ø–µ—Ä—à–∏–π –µ–ª–µ–º–µ–Ω—Ç —Ç–∞ –≤–∏–≤–µ–¥—ñ—Ç—å –π–æ–≥–æ –≤ –∫–æ–Ω—Å–æ–ª—å.
// –í—Å—Ç–∞–≤—Ç–µ ¬´Country¬ª —Ç–∞ ¬´Reggae¬ª –Ω–∞ –ø–æ—á–∞—Ç–æ–∫ –º–∞—Å–∏–≤—É.
// const genres = ['Jazz', 'Blues'];
//
// genres.push('Rock-N-Roll');
//
// console.log(genres[genres.length - 1])
//
// console.log(genres.shift())
//
// genres.unshift('Country', 'Reggae');
//
// console.log(genres)








// Example 2 - –ú–∞—Å–∏–≤–∏ —Ç–∞ —Ä—è–¥–∫–∏
// –ù–∞–ø–∏—à–∏ —Å–∫—Ä–∏–ø—Ç –¥–ª—è –æ–±—á–∏—Å–ª–µ–Ω–Ω—è –ø–ª–æ—â—ñ –ø—Ä—è–º–æ–∫—É—Ç–Ω–∏–∫–∞ –∑—ñ —Å—Ç–æ—Ä–æ–Ω–∞–º–∏, –∑–Ω–∞—á–µ–Ω–Ω—è —è–∫–∏—Ö –∑–±–µ—Ä—ñ–≥–∞—é—Ç—å—Å—è
//  —É –∑–º—ñ–Ω–Ω—ñ–π values —É –≤–∏–≥–ª—è–¥—ñ —Ä—è–¥–∫–∞. –ó–Ω–∞—á–µ–Ω–Ω—è –≥–∞—Ä–∞–Ω—Ç–æ–≤–∞–Ω–æ —Ä–æ–∑–¥—ñ–ª–µ–Ω—ñ –ø—Ä–æ–±—ñ–ª–æ–º.
//
// const values = '8 11';
//
// const splitResult = values.split(' ') // ['8', '11']
//
// const side1 = +splitResult[0]; // 8
// const side2 = +splitResult[1]; // 11
//
// const result = side1 * side2;
//
// console.log(result);





// Example 3 - –ü–µ—Ä–µ–±—ñ—Ä –º–∞—Å–∏–≤—É
// –ù–∞–ø–∏—à–∏ —Å–∫—Ä–∏–ø—Ç –¥–ª—è –ø–µ—Ä–µ–±–æ—Ä—É –º–∞—Å–∏–≤—É fruits —Ü–∏–∫–ª–æ–º for. –î–ª—è –∫–æ–∂–Ω–æ–≥–æ –µ–ª–µ–º–µ–Ω—Ç–∞ –º–∞—Å–∏–≤—É –≤–∏–≤–µ–¥–∏ 
// –≤ –∫–æ–Ω—Å–æ–ª—å —Ä—è–¥–æ–∫ —É —Ñ–æ—Ä–º–∞—Ç—ñ –Ω–æ–º–µ—Ä_–µ–ª–µ–º–µ–Ω—Ç–∞: –∑–Ω–∞—á–µ–Ω–Ω—è_–µ–ª–µ–º–µ–Ω—Ç–∞. –ù—É–º–µ—Ä–∞—Ü—ñ—è –µ–ª–µ–º–µ–Ω—Ç—ñ–≤ –ø–æ–≤–∏–Ω–Ω–∞ –ø–æ—á–∏–Ω–∞—Ç–∏—Å—è –∑ 1.
//
// const fruits = ['üçé', 'üçá', 'üçë', 'üçå', 'üçã'];
//
// let counter = 0;
//
// for (const fruit of fruits) {
//     console.log(++counter, fruit);
// }









// Example 4 - –ú–∞—Å–∏–≤–∏ —Ç–∞ —Ü–∏–∫–ª–∏
// –ù–∞–ø–∏—à–∏ —Å–∫—Ä–∏–ø—Ç, —è–∫–∏–π –≤–∏–≤–æ–¥–∏—Ç—å —É –∫–æ–Ω—Å–æ–ª—å —ñ–º'—è —Ç–∞ —Ç–µ–ª–µ—Ñ–æ–Ω–Ω–∏–π –Ω–æ–º–µ—Ä –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞. 
// –£ –∑–º—ñ–Ω–Ω–∏—Ö names —Ç–∞ phones –∑–±–µ—Ä—ñ–≥–∞—é—Ç—å—Å—è —Ä—è–¥–∫–∏ —ñ–º–µ–Ω —Ç–∞ —Ç–µ–ª–µ—Ñ–æ–Ω–Ω–∏—Ö –Ω–æ–º–µ—Ä—ñ–≤, —Ä–æ–∑–¥—ñ–ª–µ–Ω—ñ –∫–æ–º–∞–º–∏. 
// –ü–æ—Ä—è–¥–∫–æ–≤–∏–π –Ω–æ–º–µ—Ä —ñ–º–µ–Ω —Ç–∞ —Ç–µ–ª–µ—Ñ–æ–Ω—ñ–≤ —É —Ä—è–¥–∫–∞—Ö –≤–∫–∞–∑—É—é—Ç—å –Ω–∞ –≤—ñ–¥–ø–æ–≤—ñ–¥–Ω—ñ—Å—Ç—å. –ö—ñ–ª—å–∫—ñ—Å—Ç—å —ñ–º–µ–Ω —Ç–∞ —Ç–µ–ª–µ—Ñ–æ–Ω—ñ–≤ –≥–∞—Ä–∞–Ω—Ç–æ–≤–∞–Ω–æ –æ–¥–Ω–∞–∫–æ–≤–∞.
//
// const names = 'Jacob,William,Solomon,Artemis';
// const phones = '89001234567,89001112233,890055566377,890055566300';
//
// const namesArray = names.split(',');
// const phonesArray = phones.split(',');
//
// for (let i = 0; i < namesArray.length; i++) {
//     console.log(namesArray[i], phonesArray[i]);
// }









// Example 5 - –ú–∞—Å–∏–≤–∏ —Ç–∞ —Ä—è–¥–∫–∏
// –ù–∞–ø–∏—à–∏ —Å–∫—Ä–∏–ø—Ç, —è–∫–∏–π –≤–∏–≤–æ–¥–∏—Ç—å —É –∫–æ–Ω—Å–æ–ª—å —É—Å—ñ —Å–ª–æ–≤–∞ —Ä—è–¥–∫–∞ –∫—Ä—ñ–º –ø–µ—Ä—à–æ–≥–æ —ñ –æ—Å—Ç–∞–Ω–Ω—å–æ–≥–æ.
//  –†–µ–∑—É–ª—å—Ç—É—é—á–∏–π —Ä—è–¥–æ–∫ –Ω–µ –ø–æ–≤–∏–Ω–µ–Ω –ø–æ—á–∏–Ω–∞—Ç–∏—Å—è –∞–±–æ –∑–∞–∫—ñ–Ω—á—É–≤–∞—Ç–∏—Å—è —Å–∏–º–≤–æ–ª –ø—Ä–æ–±—ñ–ª—É. –°–∫—Ä–∏–ø—Ç –ø–æ–≤–∏–Ω–µ–Ω –ø—Ä–∞—Ü—é–≤–∞—Ç–∏ –¥–ª—è –±—É–¥—å-—è–∫–æ–≥–æ —Ä—è–¥–∫–∞.
//
// const string = 'Welcome to the future';
// const words = string.split(' ')
//
// for (let i = 0; i < words.length; i++) {
//     if (i === 0 || i === words.length - 1) {
//         continue;
//     }
//
//     console.log(words[i]);
// }




// Example 6 - –ú–∞—Å–∏–≤–∏ —Ç–∞ —Ä—è–¥–∫–∏
// –ù–∞–ø–∏—à–∏ —Å–∫—Ä–∏–ø—Ç, —è–∫–∏–π ¬´—Ä–æ–∑–≥–æ—Ä—Ç–∞—î¬ª —Ä—è–¥–æ–∫ (–∑–≤–æ—Ä–æ—Ç–Ω–∏–π –ø–æ—Ä—è–¥–æ–∫ –±—É–∫–≤) —ñ –≤–∏–≤–æ–¥–∏—Ç—å –π–æ–≥–æ –≤ –∫–æ–Ω—Å–æ–ª—å.
//
// const string = 'Welcome to the future';
// const words = string.split('')
// const reversedArray = words.reverse();
// const result = reversedArray.join('')
// console.log(result)




// Example 7 - –°–æ—Ä—Ç—É–≤–∞–Ω–Ω—è –º–∞—Å–∏–≤—É —ñ–∑ —Ü–∏–∫–ª–æ–º
// –ù–∞–ø–∏—à–∏ —Å–∫—Ä–∏–ø—Ç —Å–æ—Ä—Ç—É–≤–∞–Ω–Ω—è –º–∞—Å–∏–≤—É —Ä—è–¥–∫—ñ–≤ –≤ –∞–ª—Ñ–∞–≤—ñ—Ç–Ω–æ–º—É –ø–æ—Ä—è–¥–∫—É –∑–∞ –ø–µ—Ä—à–æ—é –ª—ñ—Ç–µ—Ä–æ—é –µ–ª–µ–º–µ–Ω—Ç–∞.
//
// const langs = ['python', 'javascript', 'c++', 'haskel', 'php', 'ruby'];






// Example 8 - –ü–æ—à—É–∫ –µ–ª–µ–º–µ–Ω—Ç–∞
// –ù–∞–ø–∏—à–∏ —Å–∫—Ä–∏–ø—Ç –ø–æ—à—É–∫—É –Ω–∞–π–º–µ–Ω—à–æ–≥–æ —á–∏—Å–ª–∞ —É –º–∞—Å–∏–≤—ñ. –ö–æ–¥ –ø–æ–≤–∏–Ω–µ–Ω –ø—Ä–∞—Ü—é–≤–∞—Ç–∏ –¥–ª—è –±—É–¥—å-—è–∫–æ–≥–æ –º–∞—Å–∏–≤—É —á–∏—Å–µ–ª. 
// –í–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É–π —Ü–∏–∫–ª –¥–ª—è —Ä–æ–∑–≤'—è–∑–∞–Ω–Ω—è –∑–∞–¥–∞—á—ñ.
//
// const numbers = [2, 17, 94, 1, 23, 37];
// let min = numbers[0];

// for (const number of numbers) {
//     if (min > number) {
//         min = number;
//     }
// }

// console.log(min)


// SLUG ------------------
// function slugify(title) {
//   // Change code below this line
//   const slug = title.toLowerCase().split(" ").join("-");

//   return slug;
//   // Change code above this line
// }
// console.log(slugify("Arrays for begginers")); //arrays-for-begginers
// slugify("English for developer");
// slugify("Ten secrets of JavaScript");
// slugify("How to become a JUNIOR developer in TWO WEEKS");



// function calculateTotal(number) {
//   // Change code below this line
//    let sum = 0
//  for (let i = 1; i <= number; i+=1) { // Change this line
//    sum +=i;
//  }
 
//  return sum
//    // Change code above this line
//  }
//  calculateTotal(3);// 1+2+3=6



// function calculateTotalPrice(order) {
//   let total = 0;
//   // Change code below this line
// for (let i = 0; i < order.length; i++) {
//   total += order[i]
// }
//   // Change code above this line
//   return total;
// }
// calculateTotalPrice([12, 85, 37, 4]) // 138=12+85+37+4



// –ù–∞–ø–∏—à–∏ —Ñ—É–Ω–∫—Ü–∏—é findLongestWord(string) –∫–æ—Ç–æ—Ä–∞—è –ø—Ä–∏–Ω–∏–º–∞–µ—Ç –ø—Ä–æ–∏–∑–≤–æ–ª—å–Ω—É—é —Å—Ç—Ä–æ–∫—É —Å–æ—Å—Ç–æ—è—â—É—é —Ç–æ–ª—å–∫–æ –∏–∑ —Å–ª–æ–≤
//  —Ä–∞–∑–¥–µ–ª—ë–Ω–Ω—ã—Ö –ø—Ä–æ–±–µ–ª–æ–º (–ø–∞—Ä–∞–º–µ—Ç—Ä string) –∏ –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç —Å–∞–º–æ–µ –¥–ª–∏–Ω–Ω–æ–µ —Å–ª–æ–≤–æ –≤ —ç—Ç–æ–π —Å—Ç—Ä–æ–∫–µ.

// function findLongestWord(string) {
//   // Change code below this line
// let array1 = string.match(/\w[a-z]{0,}/gi);
// let result = array1[0];

//   for(var x = 1 ; x < array1.length ; x++) {
//     if(result.length < array1[x].length)
//     {
//     result = array1[x];
//     }
//   }
//   return result;
//   // Change code above this line
// }
// findLongestWord("Google do a roll");




// –î–æ–ø–æ–ª–Ω–∏ –∫–æ–¥ —Ñ—É–Ω–∫—Ü–∏–∏ createArrayOfNumbers(min, max) —Ç–∞–∫,
// —á—Ç–æ–±—ã –æ–Ω–∞ –≤–æ–∑–≤—Ä–∞—â–∞–ª–∞ –º–∞—Å—Å–∏–≤ –≤—Å–µ—Ö —Ü–µ–ª—ã—Ö —á–∏—Å–µ–ª –æ—Ç –∑–Ω–∞—á–µ–Ω–∏—è min –¥–æ max.


// function createArrayOfNumbers(min, max) {
//   const numbers = [];
//   // Change code below this line
//   for (let i = min; i <= max; i++) {
//     if (min === 0) continue;
//     numbers.push(i)
//   }
//   // Change code above this line
//   return numbers;
// };
// createArrayOfNumbers(1, 3);
// createArrayOfNumbers(14, 17);
// createArrayOfNumbers(29, 34);



// –ù–∞–ø–∏—à–∏ —Ñ—É–Ω–∫—Ü–∏—é filterArray(numbers, value), –∫–æ—Ç–æ—Ä–∞—è –ø—Ä–∏–Ω–∏–º–∞–µ—Ç –º–∞—Å—Å–∏–≤ —á–∏—Å–µ–ª
//  (–ø–∞—Ä–∞–º–µ—Ç—Ä numbers) –∏ –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç –Ω–æ–≤—ã–π –º–∞—Å—Å–∏–≤, –≤ –∫–æ—Ç–æ—Ä–æ–º –±—É–¥—É—Ç —Ç–æ–ª—å–∫–æ —Ç–µ —ç–ª–µ–º–µ–Ω—Ç—ã –º–∞—Å—Å–∏–≤–∞ numbers, 
// –∫–æ—Ç–æ—Ä—ã–µ –±–æ–ª—å—à–µ —á–µ–º –∑–Ω–∞—á–µ–Ω–∏–µ –ø–∞—Ä–∞–º–µ—Ç—Ä–∞ value (—á–∏—Å–ª–æ).

// function filterArray(numbers, value) {
//   // Change code below this line
// let newArray = [];
//  for (let i = 0; i < numbers.length; i++) {
//    if(numbers[i] > value){
//      newArray.push(numbers[i]);
//    }
//  // Change code above this line
// }
// return newArray
// }
//   console.log(filterArray([1, 2, 3, 4, 5], 3));




// –§—É–Ω–∫—Ü–∏—è checkFruit(fruit) –ø—Ä–∏–Ω–∏–º–∞–µ—Ç —Å—Ç—Ä–æ–∫—É —Å –Ω–∞–∑–≤–∞–Ω–∏–µ–º —Ñ—Ä—É–∫—Ç–∞ (–ø–∞—Ä–∞–º–µ—Ç—Ä fruit),
//  –∏ –ø—Ä–æ–≤–µ—Ä—è–µ—Ç –µ—Å—Ç—å –ª–∏ —Ç–∞–∫–æ–π —Ñ—Ä—É–∫—Ç –≤ –º–∞—Å—Å–∏–≤–µ fruits.
// –î–æ–ø–æ–ª–Ω–∏ –∫–æ–¥ —Ñ—É–Ω–∫—Ü–∏–∏ —Ç–∞–∫, —á—Ç–æ –µ—Å–ª–∏:  —Ñ—Ä—É–∫—Ç –µ—Å—Ç—å –≤ –º–∞—Å—Å–∏–≤–µ, —Ç–æ —Ñ—É–Ω–∫—Ü–∏—è –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç true;
//                                     —Ñ—Ä—É–∫—Ç–∞ –Ω–µ—Ç –≤ –º–∞—Å—Å–∏–≤–µ, —Ç–æ —Ñ—É–Ω–∫—Ü–∏—è –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç false.

// function checkFruit(fruit) {
//   const fruits = ["apple", "plum", "pear", "orange"];

//   return fruits.includes(fruit); // Change this line
// }
// console.log(checkFruit("Pear"))




// –û–±—â–∏–º–∏ —ç–ª–µ–º–µ–Ω—Ç–∞–º–∏ –º–∞—Å—Å–∏–≤–æ–≤ –Ω–∞–∑—ã–≤–∞—é—Ç —Ç–µ —ç–ª–µ–º–µ–Ω—Ç—ã, –∫–æ—Ç–æ—Ä—ã–µ –ø—Ä–∏—Å—É—Ç—Å—Ç–≤—É—é—Ç –≤–æ –≤—Å–µ—Ö –º–∞—Å—Å–∏–≤–∞—Ö.

// –ù–∞–ø—Ä–∏–º–µ—Ä, –≤ –¥–≤—É—Ö –º–∞—Å—Å–∏–≤–∞—Ö [1, 3, 5] –∏ [0, 8, 5, 3] –æ–±—â–∏–º–∏ –±—É–¥—É—Ç —á–∏—Å–ª–∞ 3 –∏ 5, —Ç.–∫.
//  –æ–Ω–∏ –ø—Ä–∏—Å—É—Ç—Å—Ç–≤—É—é—Ç –≤ –æ–±–æ–∏—Ö –∏—Å—Ö–æ–¥–Ω—ã—Ö –º–∞—Å—Å–∏–≤–∞—Ö. –ê —á–∏—Å–ª–∞ 0, 1 –∏ 8 –ø—Ä–∏—Å—É—Ç—Å—Ç–≤—É—é—Ç —Ç–æ–ª—å–∫–æ –≤ –æ–¥–Ω–æ–º –∏–∑ –º–∞—Å—Å–∏–≤–æ–≤.

// –ù–∞–ø–∏—à–∏ —Ñ—É–Ω–∫—Ü–∏—é getCommonElements(array1, array2) –∫–æ—Ç–æ—Ä–∞—è –ø–æ–ª—É—á–∞–µ—Ç –¥–≤–∞ –º–∞—Å—Å–∏–≤–∞ –ø—Ä–æ–∏–∑–≤–æ–ª—å–Ω–æ–π –¥–ª–∏–Ω—ã –≤ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã array1 –∏ array2,
//  –∏ –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç –Ω–æ–≤—ã–π –º–∞—Å—Å–∏–≤,
//  —Å–æ—Å—Ç–æ—è—â–∏–π –∏–∑ —Ç–µ—Ö —ç–ª–µ–º–µ–Ω—Ç–æ–≤, –∫–æ—Ç–æ—Ä—ã–µ –ø—Ä–∏—Å—É—Ç—Å—Ç–≤—É—é—Ç –≤ –æ–±–æ–∏—Ö –∏—Å—Ö–æ–¥–Ω—ã—Ö –º–∞—Å—Å–∏–≤–∞—Ö.

// function getCommonElements(array1, array2) {

// const newArray = [];
//   for (let value of array1) {
//     if (array2.includes(value)) {
//       newArray.push(value);
//     }
//   }
// return newArray;
// }
// console.log(getCommonElements([1, 2, 3], [2, 1, 17, 19]));




// –í—ã–ø–æ–ª–Ω–∏ —Ä–µ—Ñ–∞–∫—Ç–æ—Ä–∏–Ω–≥ —Ñ—É–Ω–∫—Ü–∏–∏ countProps(object) –∏—Å–ø–æ–ª—å–∑—É—è –º–µ—Ç–æ–¥ Object.keys() –∏,
//  –≤–æ–∑–º–æ–∂–Ω–æ, –Ω–æ –Ω–µ–æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ, —Ü–∏–∫–ª for...of.


// function countProps(object) {
//   return Object.keys(object).length
// }
// console.log(countProps({ mail: "poly@mail.com", isOnline: true, score: 500 }));
// console.log(countProps({ mail: "poly@mail.com", isOnline: true, score: 500 ,name: 'Victor'}));



// –ó–∞–ø–∏—à–∏ –≤ –ø–µ—Ä–µ–º–µ–Ω–Ω—É—é keys –º–∞—Å—Å–∏–≤ –∫–ª—é—á–µ–π —Å–æ–±—Å—Ç–≤–µ–Ω–Ω—ã—Ö —Å–≤–æ–π—Å—Ç–≤ –æ–±—ä–µ–∫—Ç–∞ apartment, 
// –∞ –≤ –ø–µ—Ä–µ–º–µ–Ω–Ω—É—é values –º–∞—Å—Å–∏–≤ –≤—Å–µ—Ö –∑–Ω–∞—á–µ–Ω–∏–π –µ–≥–æ —Å–≤–æ–π—Å—Ç–≤.
// –ò—Å–ø–æ–ª—å–∑—É–π –º–µ—Ç–æ–¥—ã Object.keys() –∏ Object.values().

// const apartment = {
//   descr: "Spacious apartment in the city center",
//   rating: 4,
//   price: 2153,
// };
//   const keys = Object.keys(apartment);
//   console.log(keys)
//   const values = Object.values(apartment);
//   console.log(values)



// –ù–∞–ø–∏—à–∏ —Ñ—É–Ω–∫—Ü–∏—é countTotalSalary(salaries) –∫–æ—Ç–æ—Ä–∞—è –ø—Ä–∏–Ω–∏–º–∞–µ—Ç –æ–±—ä–µ–∫—Ç –∑–∞—Ä–ø–ª–∞—Ç, –≥–¥–µ –∏–º—è —Å–≤–æ–π—Å—Ç–≤–∞ —ç—Ç–æ –∏–º—è —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–∞,
//  –∞ –∑–Ω–∞—á–µ–Ω–∏–µ —Å–≤–æ–π—Å—Ç–≤–∞ —ç—Ç–æ –∑–∞—Ä–ø–ª–∞—Ç–∞. –§—É–Ω–∫—Ü–∏—è –¥–æ–ª–∂–Ω–∞ —Ä–∞—Å—Å—á–∏—Ç–∞—Ç—å –æ–±—â—É—é —Å—É–º–º—É –∑–∞—Ä–ø–ª–∞—Ç —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–æ–≤ –∏ –≤–µ—Ä–Ω—É—Ç—å –µ—ë.
//  –ò—Å–ø–æ–ª—å–∑—É–π –ø–µ—Ä–µ–º–µ–Ω–Ω—É—é totalSalary –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è –æ–±—â–µ–π —Å—É–º–º—ã –∑–∞—Ä–ø–ª–∞—Ç—ã.

// function countTotalSalary (salaries) {
//   let totalSalary = 0;

// let values = Object.values(salaries)

// for (const value of values) {
//   totalSalary += value;
// }

//   console.log(totalSalary);
// }
// countTotalSalary({ mango: 100, poly: 150, alfred: 80 });
// countTotalSalary({ kiwi: 200, poly: 50, ajax: 150 });




// –ü–µ—Ä–µ–±–µ—Ä–∏ –º–∞—Å—Å–∏–≤ –æ–±—ä–µ–∫—Ç–æ–≤ colors –∏—Å–ø–æ–ª—å–∑—É—è —Ü–∏–∫–ª for...of. –î–æ–±–∞–≤—å –≤ –º–∞—Å—Å–∏–≤ hexColors –∑–Ω–∞—á–µ–Ω–∏—è —Å–≤–æ–π—Å—Ç–≤ hex,
//  –∞ –≤ –º–∞—Å—Å–∏–≤ rgbColors –∑–Ω–∞—á–µ–Ω–∏—è —Å–≤–æ–π—Å—Ç–≤ rgb –∏–∑ –≤—Å–µ—Ö –æ–±—ä–µ–∫—Ç–æ–≤ –º–∞—Å—Å–∏–≤–∞ colors.

// const colors = [
//   { hex: "#f44336", rgb: "244,67,54" },
//   { hex: "#2196f3", rgb: "33,150,243" },
//   { hex: "#4caf50", rgb: "76,175,80" },
//   { hex: "#ffeb3b", rgb: "255,235,59" },
// ];
// const hexColors = [];
// const rgbColors = [];
// for (const color of colors) {
//   hexColors.push(color.hex) 
// }
// console.log(hexColors)
// for (const rgb of colors) {
//   rgbColors.push(rgb.rgb) 
// }
// console.log(rgbColors)
/////////////////////////////////////////////////////////
// const colors = [
//   { hex: "#f44336", rgb: "244,67,54" },
//   { hex: "#2196f3", rgb: "33,150,243" },
//   { hex: "#4caf50", rgb: "76,175,80" },
//   { hex: "#ffeb3b", rgb: "255,235,59" },
// ];
// const hexColors = [];
// const rgbColors = [];
// for (const {hex, rgb} of colors) {
//   hexColors.push(hex);
//   rgbColors.push(rgb);
// }




// –ù–∞–ø–∏—à–∏ —Ñ—É–Ω–∫—Ü–∏—é getProductPrice(productName) –∫–æ—Ç–æ—Ä–∞—è –ø—Ä–∏–Ω–∏–º–∞–µ—Ç –æ–¥–∏–Ω –ø–∞—Ä–∞–º–µ—Ç—Ä productName - –Ω–∞–∑–≤–∞–Ω–∏–µ –ø—Ä–æ–¥—É–∫—Ç–∞.
//  –§—É–Ω–∫—Ü–∏—è –∏—â–µ—Ç –æ–±—ä–µ–∫—Ç –ø—Ä–æ–¥—É–∫—Ç–∞ —Å —Ç–∞–∫–∏–º –∏–º–µ–Ω–µ–º (—Å–≤–æ–π—Å—Ç–≤–æ name) –≤ –º–∞—Å—Å–∏–≤–µ products –∏ –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç –µ–≥–æ —Ü–µ–Ω—É (—Å–≤–æ–π—Å—Ç–≤–æ price).
//  –ï—Å–ª–∏ –ø—Ä–æ–¥—É–∫—Ç —Å —Ç–∞–∫–∏–º –Ω–∞–∑–≤–∞–Ω–∏–µ–º –Ω–µ –Ω–∞–π–¥–µ–Ω, —Ñ—É–Ω–∫—Ü–∏—è –¥–æ–ª–∂–Ω–∞ –≤–æ–∑–≤—Ä–∞—â–∞—Ç—å null.

// const products = [
//   { name: "Radar", price: 1300, quantity: 4 },
//   { name: "Scanner", price: 2700, quantity: 3 },
//   { name: "Droid", price: 400, quantity: 7 },
//   { name: "Grip", price: 1200, quantity: 9 },
// ];
// let noName = null;
// function getProductPrice(productName) {
// for (const product of products) {
//   if (product.name === productName){
//     console.log(product.price)

//   } 
// }
// return null;
// }
// getProductPrice("Radar");
// getProductPrice("Grip");
// getProductPrice("Scanner");
// getProductPrice("Droid");
// getProductPrice('victor');




// –ù–∞–ø–∏—à–∏ —Ñ—É–Ω–∫—Ü–∏—é getAllPropValues(propName) –∫–æ—Ç–æ—Ä–∞—è –ø—Ä–∏–Ω–∏–º–∞–µ—Ç –æ–¥–∏–Ω –ø–∞—Ä–∞–º–µ—Ç—Ä propName - –∏–º—è (–∫–ª—é—á) —Å–≤–æ–π—Å—Ç–≤–∞.
//  –§—É–Ω–∫—Ü–∏—è –¥–æ–ª–∂–Ω–∞ –≤–µ—Ä–Ω—É—Ç—å –º–∞—Å—Å–∏–≤ –≤—Å–µ—Ö –∑–Ω–∞—á–µ–Ω–∏–π —Å–≤–æ–π—Å—Ç–≤–∞ —Å —Ç–∞–∫–∏–º –∏–º–µ–Ω–µ–º –∏–∑ –∫–∞–∂–¥–æ–≥–æ –æ–±—ä–µ–∫—Ç–∞ –≤ –º–∞—Å—Å–∏–≤–µ products.
//  –ï—Å–ª–∏ –≤ –æ–±—ä–µ–∫—Ç–∞—Ö –Ω–µ—Ç —Å–≤–æ–π—Å—Ç–≤–∞ —Å —Ç–∞–∫–∏–º –∏–º–µ–Ω–µ–º, —Ñ—É–Ω–∫—Ü–∏—è –¥–æ–ª–∂–Ω–∞ –≤–µ—Ä–Ω—É—Ç—å –ø—É—Å—Ç–æ–π –º–∞—Å—Å–∏–≤.

// const products = [
//   { name: "Radar", price: 1300, quantity: 4 },
//   { name: "Scanner", price: 2700, quantity: 3 },
//   { name: "Droid", price: 400, quantity: 7 },
//   { name: "Grip", price: 1200, quantity: 9 },
// ];

// function getAllPropValues(propName) {
//   let values = [];
// for (const product of products) {
//   if (Object.keys(product).includes(propName)) {
//     values.push(product[propName])
//   }
// }
// return values;
// }
// console.log(getAllPropValues("name"));
// console.log(getAllPropValues("quantity"));
// console.log(getAllPropValues("price"));
// console.log(getAllPropValues("category"));



// –ù–∞–ø–∏—à–∏ —Ñ—É–Ω–∫—Ü–∏—é calculateTotalPrice(productName) –∫–æ—Ç–æ—Ä–∞—è –ø—Ä–∏–Ω–∏–º–∞–µ—Ç –æ–¥–∏–Ω –ø–∞—Ä–∞–º–µ—Ç—Ä productName - –Ω–∞–∑–≤–∞–Ω–∏–µ —Ç–æ–≤–∞—Ä–∞.
//  –§—É–Ω–∫—Ü–∏—è –¥–æ–ª–∂–Ω–∞ –≤–µ—Ä–Ω—É—Ç—å –æ–±—â—É—é —Å—Ç–æ–∏–º–æ—Å—Ç—å (—Ü–µ–Ω–∞ * –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ) —Ç–æ–≤–∞—Ä–∞ —Å —Ç–∞–∫–∏–º –∏–º–µ–Ω–µ–º –∏–∑ –º–∞—Å—Å–∏–≤–∞ products.

// const products = [
//   { name: "Radar", price: 1300, quantity: 4 },
//   { name: "Scanner", price: 2700, quantity: 3 },
//   { name: "Droid", price: 400, quantity: 7 },
//   { name: "Grip", price: 1200, quantity: 9 },
// ];

// function calculateTotalPrice(productName) {
//   for (const product of products) {
//       if (product.name === productName){
//         console.log(product.price * product.quantity)
    
//       } 
//     }
//     return 0;
// }
// calculateTotalPrice("Blaster");
// calculateTotalPrice("Radar");
// calculateTotalPrice("Droid");



// –ü—Ä–∏—à–µ–ª —Ç—Ä—ë—Ö–¥–Ω–µ–≤–Ω—ã–π –ø—Ä–æ–≥–Ω–æ–∑ –º–∞–∫—Å–∏–º–∞–ª—å–Ω—ã—Ö —Ç–µ–º–ø–µ—Ä–∞—Ç—É—Ä –∏ –º—ã —Å—á–∏—Ç–∞–µ–º —Å—Ä–µ–¥–Ω—é—é —Ç–µ–º–ø–µ—Ä–∞—Ç—É—Ä—É –∑–∞ —Ç—Ä–∏ –¥–Ω—è (meanTemperature).
//  –ó–∞–º–µ–Ω–∏ –æ–±—ä—è–≤–ª–µ–Ω–∏—è –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö yesterday,
//  today –∏ tomorrow –æ–¥–Ω–æ–π –æ–ø–µ—Ä–∞—Ü–∏–µ–π –¥–µ—Å—Ç—Ä—É–∫—Ç—É—Ä–∏–∑–∞—Ü–∏–∏ —Å–≤–æ–π—Å—Ç–≤ –æ–±—ä–µ–∫—Ç–∞ highTemperatures.

// const highTemperatures = {
//   yesterday: 28,
//   today: 26,
//   tomorrow: 33,
// };

// const {yesterday, today, tomorrow} = highTemperatures;

// const meanTemperature = (yesterday + today + tomorrow) / 3;

// console.log(meanTemperature);



// –ù–∞–ø–∏—à–∏ —Ñ—É–Ω–∫—Ü–∏—é makeTask(data) –∫–æ—Ç–æ—Ä–∞—è –ø—Ä–∏–Ω–∏–º–∞–µ—Ç –æ–¥–∏–Ω –ø–∞—Ä–∞–º–µ—Ç—Ä data - –æ–±—ä–µ–∫—Ç —Å–æ —Å–ª–µ–¥—É—é—â–∏–º–∏ —Å–≤–æ–π—Å—Ç–≤–∞–º–∏.
// text - —Ç–µ–∫—Å—Ç –∑–∞–¥–∞—á–∏.
// category - –∫–∞—Ç–µ–≥–æ—Ä–∏—è –∑–∞–¥–∞—á–∏.
// priority - –ø—Ä–∏–æ—Ä–∏—Ç–µ—Ç –∑–∞–¥–∞—á–∏.
// –§—É–Ω–∫—Ü–∏—è –¥–æ–ª–∂–Ω–∞ —Å–æ—Å—Ç–∞–≤–∏—Ç—å –∏ –≤–µ—Ä–Ω—É—Ç—å –Ω–æ–≤—ã–π –æ–±—ä–µ–∫—Ç –∑–∞–¥–∞—á–∏, –Ω–µ –∏–∑–º–µ–Ω—è—è –Ω–∞–ø—Ä—è–º—É—é –ø–∞—Ä–∞–º–µ—Ç—Ä data.
// –í –Ω–æ–≤–æ–º –æ–±—ä–µ–∫—Ç–µ –¥–æ–ª–∂–Ω–æ –±—ã—Ç—å —Å–≤–æ–π—Å—Ç–≤–æ completed,
//   –∑–Ω–∞—á–µ–Ω–∏–µ –∫–æ—Ç–æ—Ä–æ–≥–æ —Ö—Ä–∞–Ω–∏—Ç—Å—è –≤ –æ–¥–Ω–æ–∏–º—ë–Ω–Ω–æ–π –ª–æ–∫–∞–ª—å–Ω–æ–π –ø–µ—Ä–µ–º–µ–Ω–Ω–æ–π.
// –í –ø–∞—Ä–∞–º–µ—Ç—Ä–µ data –≥–∞—Ä–∞–Ω—Ç–∏—Ä–æ–≤–∞–Ω–Ω–æ –±—É–¥–µ—Ç —Ç–æ–ª—å–∫–æ —Å–≤–æ–π—Å—Ç–≤–æ text, –∞ –æ—Å—Ç–∞–ª—å–Ω—ã–µ –¥–≤–∞, category –∏ priority, –º–æ–≥—É—Ç –æ—Ç—Å—É—Ç—Å—Ç–≤–æ–≤–∞—Ç—å. –¢–æ–≥–¥–∞,
//   –≤ –Ω–æ–≤–æ–º –æ–±—ä–µ–∫—Ç–µ –∑–∞–¥–∞—á–∏,
//   –≤ —Å–≤–æ–π—Å—Ç–≤–∞—Ö category –∏ priority –¥–æ–ª–∂–Ω—ã –±—ã—Ç—å –∑–Ω–∞—á–µ–Ω–∏—è –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é, —Ö—Ä–∞–Ω—è—â–∏–µ—Å—è –≤ –æ–¥–Ω–æ–∏–º—ë–Ω–Ω—ã—Ö –ª–æ–∫–∞–ª—å–Ω—ã—Ö –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö.

// function makeTask(data) {
//   const completed = false;
//   const category = "General";
//   const priority = "Normal";
// return {completed, category, priority, ...data};
// }
// console.log(makeTask({})); //{ category: "General", priority: "Normal", completed: false }
// console.log(makeTask({ category: "Homemade", priority: "Low", text: "Take out the trash" }));



// –ò—Å–ø–æ–ª—å–∑—É—è –æ–ø–µ—Ä–∞—Ü–∏—é rest –¥–æ–ø–æ–ª–Ω–∏ –∫–æ–¥ —Ñ—É–Ω–∫—Ü–∏–∏ add() —Ç–∞–∫, —á—Ç–æ–±—ã –æ–Ω–∞ –ø—Ä–∏–Ω–∏–º–∞–ª–∞ –ª—é–±–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –∞—Ä–≥—É–º–µ–Ω—Ç–æ–≤, 
// —Å—á–∏—Ç–∞–ª–∞ –∏ –≤–æ–∑–≤—Ä–∞—â–∞–ª–∞ –∏—Ö —Å—É–º–º—É.

// function add(...rest) {
//   let total = 0;
//   for (let name of rest) {
//     total += name
//   }
//   return total
// }
// console.log(add(74, 11, 62, 46, 12, 36))



// –§—É–Ω–∫—Ü–∏—è addOverNum() —Å—á–∏—Ç–∞–µ—Ç —Å—É–º–º—É –≤—Å–µ—Ö –∞—Ä–≥—É–º–µ–Ω—Ç–æ–≤. –ò–∑–º–µ–Ω–∏ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã –∏ —Ç–µ–ª–æ —Ñ—É–Ω–∫—Ü–∏–∏ addOverNum() —Ç–∞–∫,
//  —á—Ç–æ–±—ã –æ–Ω–∞ —Å—á–∏—Ç–∞–ª–∞ —Å—É–º–º—É —Ç–æ–ª—å–∫–æ —Ç–µ—Ö –∞—Ä–≥—É–º–µ–Ω—Ç–æ–≤, –∫–æ—Ç–æ—Ä—ã–µ –±–æ–ª—å—à–µ —á–µ–º –∑–∞–¥–∞–Ω–Ω–æ–µ —á–∏—Å–ª–æ.
//  –≠—Ç–æ —á–∏—Å–ª–æ –¥–æ–ª–∂–Ω–æ –±—ã—Ç—å –ø–µ—Ä–≤—ã–º –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–º —Ñ—É–Ω–∫—Ü–∏–∏.

function addOverNum(number, ...args) {
  let total = 0;

  for (const arg of args) {
    if (arg > number) {
    total += arg;
    }
  }
  return total;
}
addOverNum(50, 15, 27);
addOverNum(10, 12, 4, 11, 48, 10, 8);
addOverNum(15, 32, 6, 13, 19, 8);
addOverNum(20, 74, 11, 62, 46, 12, 36);
